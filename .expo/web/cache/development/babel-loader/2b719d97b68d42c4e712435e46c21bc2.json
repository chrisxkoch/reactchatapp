{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/christopherkoch/reactnatchat/components/Chat.js\";\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\nimport React, { Component } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat';\nimport NetInfo from \"@react-native-community/netinfo\";\nimport MapView from \"react-native-maps\";\nimport CustomActions from \"./CustomActions\";\n\nvar firebase = require('firebase');\n\nrequire('firebase/firestore');\n\nvar Chat = function (_Component) {\n  _inherits(Chat, _Component);\n\n  function Chat(_props) {\n    var _this;\n\n    _classCallCheck(this, Chat);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chat).call(this, _props));\n\n    _this.setUser = function (_id) {\n      var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"Anonymous\";\n\n      _this.setState({\n        user: {\n          _id: _id,\n          name: name,\n          avatar: \"https://placeimg.com/140/140/tech\"\n        }\n      });\n    };\n\n    _this.getMessages = function _callee() {\n      var messages;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              messages = [];\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('messages'));\n\n            case 4:\n              _context.t0 = _context.sent;\n\n              if (_context.t0) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.t0 = [];\n\n            case 7:\n              messages = _context.t0;\n\n              _this.setState({\n                messages: JSON.parse(messages)\n              });\n\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t1 = _context[\"catch\"](1);\n              console.log(_context.t1.message);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 11]]);\n    };\n\n    _this.saveMessages = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('messages', JSON.stringify(_this.state.messages)));\n\n            case 3:\n              _context2.next = 8;\n              break;\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 5]]);\n    };\n\n    _this.deleteMessages = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.removeItem('messages'));\n\n            case 3:\n              _context3.next = 8;\n              break;\n\n            case 5:\n              _context3.prev = 5;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0.message);\n\n            case 8:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 5]]);\n    };\n\n    _this.onCollectionUpdate = function (querySnapshot) {\n      var messages = [];\n      querySnapshot.forEach(function (doc) {\n        var data = doc.data();\n        messages.push({\n          _id: data._id,\n          text: data.text,\n          createdAt: data.createdAt.toDate(),\n          user: data.user,\n          image: data.image || '',\n          location: data.location || null\n        });\n      });\n\n      _this.setState({\n        messages: messages\n      });\n    };\n\n    _this.renderCustomActions = function (props) {\n      return React.createElement(CustomActions, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        }\n      }));\n    };\n\n    _this.state = {\n      isConnected: false,\n      messages: [],\n      user: {\n        _id: '',\n        name: '',\n        avatar: ''\n      },\n      uid: 0\n    };\n    var firebaseConfig = {\n      apiKey: \"AIzaSyAmG0c_F_AOdIv9kUX8vEJ9DTwHwu6-HfM\",\n      authDomain: \"test-37279.firebaseapp.com\",\n      databaseURL: \"https://test-37279.firebaseio.com\",\n      projectId: \"test-37279\",\n      storageBucket: \"test-37279.appspot.com\",\n      messagingSenderId: \"302272369863\",\n      appId: \"1:302272369863:web:e0b5ce7857eddd38901ae2\",\n      measurementId: \"G-S8BWCKJGF6\"\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    _this.referenceMessages = firebase.firestore().collection('messages');\n    return _this;\n  }\n\n  _createClass(Chat, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      NetInfo.fetch().then(function (state) {\n        if (state.isConnected) {\n          _this2.setState({\n            isConnected: true\n          });\n        }\n\n        if (state.isConnected) {\n          try {\n            _this2.authUnsubscribe = firebase.auth().onAuthStateChanged(function _callee4(user) {\n              return _regeneratorRuntime.async(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      if (user) {\n                        _context4.next = 3;\n                        break;\n                      }\n\n                      _context4.next = 3;\n                      return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n                    case 3:\n                      if (_this2.props.navigation.state.params.name) {\n                        _this2.setUser(user.uid, _this2.props.navigation.state.params.name);\n                      } else {\n                        _this2.setUser(user.uid);\n                      }\n\n                      _this2.setState({\n                        uid: user.uid,\n                        loggedInText: \"You are online \" + _this2.props.navigation.state.params.name + \"!\"\n                      });\n\n                      _this2.unsubscribe = _this2.referenceMessages.orderBy('createdAt', 'desc').onSnapshot(_this2.onCollectionUpdate);\n\n                    case 6:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              });\n            });\n          } catch (err) {\n            console.log(err.message);\n          }\n        } else {\n          _this2.setState({\n            isConnected: false\n          });\n\n          _this2.getMessages();\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.authUnsubscribe();\n      this.unsubscribe();\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage() {\n      this.referenceMessages.add({\n        _id: this.state.messages[0]._id,\n        text: this.state.messages[0].text || '',\n        createdAt: this.state.messages[0].createdAt,\n        user: this.state.user,\n        uid: this.state.uid,\n        image: this.state.messages[0].image || '',\n        location: this.state.messages[0].location || null\n      });\n    }\n  }, {\n    key: \"onSend\",\n    value: function onSend() {\n      var _this3 = this;\n\n      var messages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.setState(function (previousState) {\n        return {\n          messages: GiftedChat.append(previousState.messages, messages)\n        };\n      }, function () {\n        _this3.addMessage();\n\n        _this3.saveMessages();\n      });\n    }\n  }, {\n    key: \"renderBubble\",\n    value: function renderBubble(props) {\n      return React.createElement(Bubble, _extends({}, props, {\n        wrapperStyle: {\n          right: {\n            backgroundColor: \"#333\"\n          },\n          left: {\n            backgroundColor: \"#FFB\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        }\n      }));\n    }\n  }, {\n    key: \"renderInputToolbar\",\n    value: function renderInputToolbar(props) {\n      if (this.state.isConnected) {\n        return React.createElement(InputToolbar, _extends({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"renderCustomView\",\n    value: function renderCustomView(props) {\n      var currentMessage = props.currentMessage;\n\n      if (currentMessage.location) {\n        return React.createElement(MapView, {\n          style: {\n            width: 300,\n            height: 200,\n            borderRadius: 13,\n            margin: 5\n          },\n          region: {\n            latitude: currentMessage.location.latitude,\n            longitude: currentMessage.location.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          }\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(View, {\n        style: [styles.container, {\n          backgroundColor: this.props.navigation.state.params.colorScheme\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        }\n      }, this.state.loggedInText), React.createElement(GiftedChat, {\n        renderBubble: this.renderBubble.bind(this),\n        renderInputToolbar: this.renderInputToolbar.bind(this),\n        renderActions: this.renderCustomActions.bind(this),\n        renderCustomView: this.renderCustomView,\n        messages: this.state.messages,\n        onSend: function onSend(messages) {\n          return _this4.onSend(messages);\n        },\n        user: this.state.user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        }\n      }), Platform.OS === \"android\" ? React.createElement(KeyboardSpacer, {\n        topSpacing: 55,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        }\n      }) : null);\n    }\n  }]);\n\n  return Chat;\n}(Component);\n\nChat.navigationOptions = function (_ref) {\n  var navigation = _ref.navigation;\n  return {\n    title: navigation.state.params.name\n  };\n};\n\nexport { Chat as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#000000\"\n  }\n});","map":{"version":3,"sources":["/Users/christopherkoch/reactnatchat/components/Chat.js"],"names":["KeyboardSpacer","React","Component","GiftedChat","Bubble","InputToolbar","NetInfo","MapView","CustomActions","firebase","require","Chat","props","setUser","_id","name","setState","user","avatar","getMessages","messages","AsyncStorage","getItem","JSON","parse","console","log","message","saveMessages","setItem","stringify","state","deleteMessages","removeItem","onCollectionUpdate","querySnapshot","forEach","doc","data","push","text","createdAt","toDate","image","location","renderCustomActions","isConnected","uid","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","referenceMessages","firestore","collection","fetch","then","authUnsubscribe","auth","onAuthStateChanged","signInAnonymously","navigation","params","loggedInText","unsubscribe","orderBy","onSnapshot","err","add","previousState","append","addMessage","right","backgroundColor","left","currentMessage","width","height","borderRadius","margin","latitude","longitude","latitudeDelta","longitudeDelta","styles","container","colorScheme","renderBubble","bind","renderInputToolbar","renderCustomView","onSend","Platform","OS","navigationOptions","title","StyleSheet","create","flex"],"mappings":";;;;;;;;AAGA,OAAOA,cAAP,MAA2B,8BAA3B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;AAEA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,YAA7B,QAAiD,0BAAjD;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAOC,aAAP;;AAEA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,oBAAD,CAAP;;IAEqBC,I;;;AACnB,gBAAYC,MAAZ,EAAmB;AAAA;;AAAA;;AACjB,8EAAMA,MAAN;;AADiB,UAgFnBC,OAhFmB,GAgFT,UAACC,GAAD,EAA6B;AAAA,UAAvBC,IAAuB,uEAAhB,WAAgB;;AACrC,YAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AACJH,UAAAA,GAAG,EAAEA,GADD;AAEJC,UAAAA,IAAI,EAAEA,IAFF;AAGJG,UAAAA,MAAM,EAAE;AAHJ;AADM,OAAd;AAOD,KAxFkB;;AAAA,UAsGnBC,WAtGmB,GAsGL;AAAA;AAAA;AAAA;AAAA;AAAA;AACRC,cAAAA,QADQ,GACG,EADH;AAAA;AAAA;AAAA,+CAGOC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAHP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA,4BAG2C,EAH3C;;AAAA;AAGVF,cAAAA,QAHU;;AAIV,oBAAKJ,QAAL,CAAc;AACZI,gBAAAA,QAAQ,EAAEG,IAAI,CAACC,KAAL,CAAWJ,QAAX;AADE,eAAd;;AAJU;AAAA;;AAAA;AAAA;AAAA;AAQVK,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAIC,OAAhB;;AARU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtGK;;AAAA,UAkHnBC,YAlHmB,GAkHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAELP,YAAY,CAACQ,OAAb,CAAqB,UAArB,EAAiCN,IAAI,CAACO,SAAL,CAAe,MAAKC,KAAL,CAAWX,QAA1B,CAAjC,CAFK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIXK,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,OAAhB;;AAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAlHI;;AAAA,UA0HnBK,cA1HmB,GA0HF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEPX,YAAY,CAACY,UAAb,CAAwB,UAAxB,CAFO;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIbR,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAIC,OAAhB;;AAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1HE;;AAAA,UA4InBO,kBA5ImB,GA4IE,UAACC,aAAD,EAAmB;AACtC,UAAMf,QAAQ,GAAG,EAAjB;AACAe,MAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,GAAG,EAAI;AAC3B,YAAIC,IAAI,GAAGD,GAAG,CAACC,IAAJ,EAAX;AACAlB,QAAAA,QAAQ,CAACmB,IAAT,CAAc;AACZzB,UAAAA,GAAG,EAAEwB,IAAI,CAACxB,GADE;AAEZ0B,UAAAA,IAAI,EAAEF,IAAI,CAACE,IAFC;AAGZC,UAAAA,SAAS,EAAEH,IAAI,CAACG,SAAL,CAAeC,MAAf,EAHC;AAIZzB,UAAAA,IAAI,EAAEqB,IAAI,CAACrB,IAJC;AAKZ0B,UAAAA,KAAK,EAAEL,IAAI,CAACK,KAAL,IAAc,EALT;AAMZC,UAAAA,QAAQ,EAAEN,IAAI,CAACM,QAAL,IAAiB;AANf,SAAd;AAQD,OAVD;;AAWA,YAAK5B,QAAL,CAAc;AACZI,QAAAA,QAAQ,EAARA;AADY,OAAd;AAGD,KA5JkB;;AAAA,UAyLnByB,mBAzLmB,GAyLG,UAACjC,KAAD,EAAW;AAC/B,aAAO,oBAAC,aAAD,eAAmBA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KA3LkB;;AAEjB,UAAKmB,KAAL,GAAa;AACXe,MAAAA,WAAW,EAAE,KADF;AAEX1B,MAAAA,QAAQ,EAAE,EAFC;AAGXH,MAAAA,IAAI,EAAE;AACJH,QAAAA,GAAG,EAAE,EADD;AAEJC,QAAAA,IAAI,EAAE,EAFF;AAGJG,QAAAA,MAAM,EAAE;AAHJ,OAHK;AAQX6B,MAAAA,GAAG,EAAE;AARM,KAAb;AAYA,QAAIC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,yCADW;AAEnBC,MAAAA,UAAU,EAAE,4BAFO;AAGnBC,MAAAA,WAAW,EAAE,mCAHM;AAInBC,MAAAA,SAAS,EAAE,YAJQ;AAKnBC,MAAAA,aAAa,EAAE,wBALI;AAMnBC,MAAAA,iBAAiB,EAAE,cANA;AAOnBC,MAAAA,KAAK,EAAE,2CAPY;AAQnBC,MAAAA,aAAa,EAAE;AARI,KAArB;;AAWA,QAAI,CAAC/C,QAAQ,CAACgD,IAAT,CAAcC,MAAnB,EAA2B;AACzBjD,MAAAA,QAAQ,CAACkD,aAAT,CAAuBX,cAAvB;AACD;;AAED,UAAKY,iBAAL,GAAyBnD,QAAQ,CAACoD,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,CAAzB;AA7BiB;AA8BlB;;;;wCAImB;AAAA;;AAClBxD,MAAAA,OAAO,CAACyD,KAAR,GAAgBC,IAAhB,CAAqB,UAAAjC,KAAK,EAAI;AAC5B,YAAIA,KAAK,CAACe,WAAV,EAAuB;AACrB,UAAA,MAAI,CAAC9B,QAAL,CAAc;AACZ8B,YAAAA,WAAW,EAAE;AADD,WAAd;AAGD;;AACD,YAAIf,KAAK,CAACe,WAAV,EAAuB;AACrB,cAAI;AACF,YAAA,MAAI,CAACmB,eAAL,GAAuBxD,QAAQ,CAACyD,IAAT,GAAgBC,kBAAhB,CAAmC,kBAAMlD,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA,0BACnDA,IADmD;AAAA;AAAA;AAAA;;AAAA;AAAA,uDAEhDR,QAAQ,CAACyD,IAAT,GAAgBE,iBAAhB,EAFgD;;AAAA;AAKxD,0BAAI,MAAI,CAACxD,KAAL,CAAWyD,UAAX,CAAsBtC,KAAtB,CAA4BuC,MAA5B,CAAmCvD,IAAvC,EAA6C;AAC3C,wBAAA,MAAI,CAACF,OAAL,CAAaI,IAAI,CAAC8B,GAAlB,EAAuB,MAAI,CAACnC,KAAL,CAAWyD,UAAX,CAAsBtC,KAAtB,CAA4BuC,MAA5B,CAAmCvD,IAA1D;AACD,uBAFD,MAEO;AACL,wBAAA,MAAI,CAACF,OAAL,CAAaI,IAAI,CAAC8B,GAAlB;AACD;;AAED,sBAAA,MAAI,CAAC/B,QAAL,CAAc;AACZ+B,wBAAAA,GAAG,EAAE9B,IAAI,CAAC8B,GADE;AAEZwB,wBAAAA,YAAY,sBAAoB,MAAI,CAAC3D,KAAL,CAAWyD,UAAX,CAAsBtC,KAAtB,CAA4BuC,MAA5B,CAAmCvD,IAAvD;AAFA,uBAAd;;AAKA,sBAAA,MAAI,CAACyD,WAAL,GAAmB,MAAI,CAACZ,iBAAL,CAAuBa,OAAvB,CAA+B,WAA/B,EAA4C,MAA5C,EAAoDC,UAApD,CAA+D,MAAI,CAACxC,kBAApE,CAAnB;;AAhBwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnC,CAAvB;AAkBD,WAnBD,CAmBE,OAAOyC,GAAP,EAAY;AACZlD,YAAAA,OAAO,CAACC,GAAR,CAAYiD,GAAG,CAAChD,OAAhB;AACD;AAGF,SAzBD,MAyBO;AACL,UAAA,MAAI,CAACX,QAAL,CAAc;AACZ8B,YAAAA,WAAW,EAAE;AADD,WAAd;;AAGA,UAAA,MAAI,CAAC3B,WAAL;AACD;AACF,OArCD;AAsCD;;;2CAEsB;AACrB,WAAK8C,eAAL;AACA,WAAKO,WAAL;AACD;;;iCAYY;AACX,WAAKZ,iBAAL,CAAuBgB,GAAvB,CAA2B;AACzB9D,QAAAA,GAAG,EAAE,KAAKiB,KAAL,CAAWX,QAAX,CAAoB,CAApB,EAAuBN,GADH;AAEzB0B,QAAAA,IAAI,EAAE,KAAKT,KAAL,CAAWX,QAAX,CAAoB,CAApB,EAAuBoB,IAAvB,IAA+B,EAFZ;AAGzBC,QAAAA,SAAS,EAAE,KAAKV,KAAL,CAAWX,QAAX,CAAoB,CAApB,EAAuBqB,SAHT;AAIzBxB,QAAAA,IAAI,EAAE,KAAKc,KAAL,CAAWd,IAJQ;AAKzB8B,QAAAA,GAAG,EAAE,KAAKhB,KAAL,CAAWgB,GALS;AAMzBJ,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWX,QAAX,CAAoB,CAApB,EAAuBuB,KAAvB,IAAgC,EANd;AAOzBC,QAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWX,QAAX,CAAoB,CAApB,EAAuBwB,QAAvB,IAAmC;AAPpB,OAA3B;AASD;;;6BA8BqB;AAAA;;AAAA,UAAfxB,QAAe,uEAAJ,EAAI;AACpB,WAAKJ,QAAL,CAAc,UAAA6D,aAAa;AAAA,eAAK;AAC9BzD,UAAAA,QAAQ,EAAEjB,UAAU,CAAC2E,MAAX,CAAkBD,aAAa,CAACzD,QAAhC,EAA0CA,QAA1C;AADoB,SAAL;AAAA,OAA3B,EAGE,YAAM;AACJ,QAAA,MAAI,CAAC2D,UAAL;;AACA,QAAA,MAAI,CAACnD,YAAL;AACD,OANH;AAOD;;;iCAqBYhB,K,EAAO;AAClB,aACE,oBAAC,MAAD,eACMA,KADN;AAEE,QAAA,YAAY,EAAE;AACZoE,UAAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,EAAE;AADZ,WADK;AAIZC,UAAAA,IAAI,EAAE;AACJD,YAAAA,eAAe,EAAE;AADb;AAJM,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAaD;;;uCAEkBrE,K,EAAO;AACxB,UAAI,KAAKmB,KAAL,CAAWe,WAAf,EAA4B;AAC1B,eACE,oBAAC,YAAD,eACMlC,KADN;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAKD;AACF;;;qCAMgBA,K,EAAO;AAAA,UACduE,cADc,GACKvE,KADL,CACduE,cADc;;AAEtB,UAAIA,cAAc,CAACvC,QAAnB,EAA6B;AAC3B,eACE,oBAAC,OAAD;AACE,UAAA,KAAK,EAAE;AACLwC,YAAAA,KAAK,EAAE,GADF;AAELC,YAAAA,MAAM,EAAE,GAFH;AAGLC,YAAAA,YAAY,EAAE,EAHT;AAILC,YAAAA,MAAM,EAAE;AAJH,WADT;AAOE,UAAA,MAAM,EAAE;AACNC,YAAAA,QAAQ,EAAEL,cAAc,CAACvC,QAAf,CAAwB4C,QAD5B;AAENC,YAAAA,SAAS,EAAEN,cAAc,CAACvC,QAAf,CAAwB6C,SAF7B;AAGNC,YAAAA,aAAa,EAAE,MAHT;AAINC,YAAAA,cAAc,EAAE;AAJV,WAPV;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;AACD,aAAO,IAAP;AACD;;;6BASQ;AAAA;;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmB;AAAEZ,UAAAA,eAAe,EAAE,KAAKrE,KAAL,CAAWyD,UAAX,CAAsBtC,KAAtB,CAA4BuC,MAA5B,CAAmCwB;AAAtD,SAAnB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAK/D,KAAL,CAAWwC,YAAlB,CAFF,EAGE,oBAAC,UAAD;AACE,QAAA,YAAY,EAAE,KAAKwB,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CADhB;AAEE,QAAA,kBAAkB,EAAE,KAAKC,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAFtB;AAGE,QAAA,aAAa,EAAE,KAAKnD,mBAAL,CAAyBmD,IAAzB,CAA8B,IAA9B,CAHjB;AAIE,QAAA,gBAAgB,EAAE,KAAKE,gBAJzB;AAKE,QAAA,QAAQ,EAAE,KAAKnE,KAAL,CAAWX,QALvB;AAME,QAAA,MAAM,EAAE,gBAAAA,QAAQ;AAAA,iBAAI,MAAI,CAAC+E,MAAL,CAAY/E,QAAZ,CAAJ;AAAA,SANlB;AAOE,QAAA,IAAI,EAAE,KAAKW,KAAL,CAAWd,IAPnB;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAYGmF,QAAQ,CAACC,EAAT,KAAgB,SAAhB,GAA4B,oBAAC,cAAD;AAAgB,QAAA,UAAU,EAAE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5B,GAAiE,IAZpE,CADF;AAgBD;;;;EA7O+BnG,S;;AAAbS,I,CAsNZ2F,iB,GAAoB,gBAAoB;AAAA,MAAjBjC,UAAiB,QAAjBA,UAAiB;AAC7C,SAAO;AACLkC,IAAAA,KAAK,EAAElC,UAAU,CAACtC,KAAX,CAAiBuC,MAAjB,CAAwBvD;AAD1B,GAAP;AAGD,C;;SA1NkBJ,I;AAgPrB,IAAMiF,MAAM,GAAGY,UAAU,CAACC,MAAX,CAAkB;AAC/BZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,IAAI,EAAE,CADG;AAETzB,IAAAA,eAAe,EAAE;AAFR;AADoB,CAAlB,CAAf","sourcesContent":["// using the expo install command to avoid installing incompatible dependencies\n// difference expo install versus npm install\n// https://forums.expo.io/t/difference-expo-install-versus-npm-install/31388/3\nimport KeyboardSpacer from 'react-native-keyboard-spacer';\nimport React, { Component } from \"react\";\nimport { StyleSheet, View, Text, Platform, AsyncStorage } from \"react-native\";\nimport { GiftedChat, Bubble, InputToolbar } from 'react-native-gifted-chat';\nimport NetInfo from \"@react-native-community/netinfo\";\nimport MapView from \"react-native-maps\";\n\nimport CustomActions from './CustomActions';\n\nconst firebase = require('firebase');\nrequire('firebase/firestore');\n\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isConnected: false,\n      messages: [],\n      user: {\n        _id: '',\n        name: '',\n        avatar: ''\n      },\n      uid: 0\n    }\n\n    // Firebase Authentication Webapp code\n    var firebaseConfig = {\n      apiKey: \"AIzaSyAmG0c_F_AOdIv9kUX8vEJ9DTwHwu6-HfM\",\n      authDomain: \"test-37279.firebaseapp.com\",\n      databaseURL: \"https://test-37279.firebaseio.com\",\n      projectId: \"test-37279\",\n      storageBucket: \"test-37279.appspot.com\",\n      messagingSenderId: \"302272369863\",\n      appId: \"1:302272369863:web:e0b5ce7857eddd38901ae2\",\n      measurementId: \"G-S8BWCKJGF6\"\n    };\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n\n    this.referenceMessages = firebase.firestore().collection('messages');\n  }\n\n  //NetInfo implementation to check the connectivity reachability\n  //Dependencies Errors @react-native-community/netinfo\": \"4.6.0\", ~ 5.5.1\n  componentDidMount() {\n    NetInfo.fetch().then(state => {\n      if (state.isConnected) {\n        this.setState({\n          isConnected: true\n        });\n      }\n      if (state.isConnected) {\n        try {\n          this.authUnsubscribe = firebase.auth().onAuthStateChanged(async user => {\n            if (!user) {\n              await firebase.auth().signInAnonymously();\n            }\n\n            if (this.props.navigation.state.params.name) {\n              this.setUser(user.uid, this.props.navigation.state.params.name);\n            } else {\n              this.setUser(user.uid);\n            }\n\n            this.setState({\n              uid: user.uid,\n              loggedInText: `You are online ${this.props.navigation.state.params.name}!`\n            });\n\n            this.unsubscribe = this.referenceMessages.orderBy('createdAt', 'desc').onSnapshot(this.onCollectionUpdate);\n          });\n        } catch (err) {\n          console.log(err.message);\n        }\n\n\n      } else {\n        this.setState({\n          isConnected: false\n        });\n        this.getMessages();\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.authUnsubscribe();\n    this.unsubscribe();\n  }\n\n  setUser = (_id, name = \"Anonymous\") => {\n    this.setState({\n      user: {\n        _id: _id,\n        name: name,\n        avatar: \"https://placeimg.com/140/140/tech\"\n      }\n    });\n  }\n\n  addMessage() {\n    this.referenceMessages.add({\n      _id: this.state.messages[0]._id,\n      text: this.state.messages[0].text || '',\n      createdAt: this.state.messages[0].createdAt,\n      user: this.state.user,\n      uid: this.state.uid,\n      image: this.state.messages[0].image || '',\n      location: this.state.messages[0].location || null\n    });\n  }\n\n  getMessages = async () => {\n    let messages = [];\n    try {\n      messages = await AsyncStorage.getItem('messages') || [];\n      this.setState({\n        messages: JSON.parse(messages)\n      });\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  saveMessages = async () => {\n    try {\n      await AsyncStorage.setItem('messages', JSON.stringify(this.state.messages));\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  deleteMessages = async () => {\n    try {\n      await AsyncStorage.removeItem('messages');\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n\n  onSend(messages = []) {\n    this.setState(previousState => ({\n      messages: GiftedChat.append(previousState.messages, messages)\n    }),\n      () => {\n        this.addMessage();\n        this.saveMessages();\n      });\n  }\n\n  onCollectionUpdate = (querySnapshot) => {\n    const messages = [];\n    querySnapshot.forEach(doc => {\n      let data = doc.data();\n      messages.push({\n        _id: data._id,\n        text: data.text,\n        createdAt: data.createdAt.toDate(),\n        user: data.user,\n        image: data.image || '',\n        location: data.location || null\n      });\n    });\n    this.setState({\n      messages\n    });\n  };\n\n  //black bubble\n  renderBubble(props) {\n    return (\n      <Bubble\n        {...props}\n        wrapperStyle={{\n          right: {\n            backgroundColor: \"#333\"\n          },\n          left: {\n            backgroundColor: \"#FFB\"\n          }\n        }}\n      />\n    );\n  }\n\n  renderInputToolbar(props) {\n    if (this.state.isConnected) {\n      return (\n        <InputToolbar\n          {...props}\n        />\n      );\n    }\n  }\n\n  renderCustomActions = (props) => {\n    return <CustomActions {...props} />;\n  };\n\n  renderCustomView(props) {\n    const { currentMessage } = props;\n    if (currentMessage.location) {\n      return (\n        <MapView\n          style={{\n            width: 300,\n            height: 200,\n            borderRadius: 13,\n            margin: 5\n          }}\n          region={{\n            latitude: currentMessage.location.latitude,\n            longitude: currentMessage.location.longitude,\n            latitudeDelta: 0.0922,\n            longitudeDelta: 0.0421\n          }}\n        />\n      );\n    }\n    return null;\n  }\n\n  //Sets the title in the Navigation Bar up top\n  static navigationOptions = ({ navigation }) => {\n    return {\n      title: navigation.state.params.name\n    };\n  };\n\n  render() {\n    return (\n      <View style={[styles.container, { backgroundColor: this.props.navigation.state.params.colorScheme }]}>\n        {/*Background color gets over-writted with the color the user selected from Start screen.*/}\n        <Text>{this.state.loggedInText}</Text>\n        <GiftedChat\n          renderBubble={this.renderBubble.bind(this)}\n          renderInputToolbar={this.renderInputToolbar.bind(this)}\n          renderActions={this.renderCustomActions.bind(this)}\n          renderCustomView={this.renderCustomView}\n          messages={this.state.messages}\n          onSend={messages => this.onSend(messages)}\n          user={this.state.user}\n        />\n        {Platform.OS === \"android\" ? <KeyboardSpacer topSpacing={55} /> : null}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#000000\",\n  }\n});"]},"metadata":{},"sourceType":"module"}