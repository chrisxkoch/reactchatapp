{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/christopherkoch/reactnatchat/components/Start.js\";\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar Start = function (_Component) {\n  _inherits(Start, _Component);\n\n  function Start() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Start);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Start)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      userName: '',\n      backgroundColor: ''\n    };\n    return _this;\n  }\n\n  _createClass(Start, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ImageBackground, {\n        source: require(\"../assets/Background-Image.png\"),\n        style: styles.backgroundImage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        }\n      }, React.createElement(Text, {\n        style: styles.appTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        }\n      }, \"ChatApp\"), React.createElement(View, {\n        style: styles.logIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        }\n      }, React.createElement(TextInput, {\n        style: styles.userNameInput,\n        onChangeText: function onChangeText(userName) {\n          return _this2.setState({\n            userName: userName\n          });\n        },\n        value: this.state.userName,\n        placeholder: \"Your Name...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        }\n      }), React.createElement(Text, {\n        style: styles.choseBackgroundColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }, \"Choose Background Color:\"), React.createElement(View, {\n        style: styles.backgroundColorWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            backgroundColor: '#090C08'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        }\n      }, React.createElement(View, {\n        style: [styles.backgroundColor, styles.black],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            backgroundColor: '#474056'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      }, React.createElement(View, {\n        style: [styles.backgroundColor, styles.purple],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            backgroundColor: '#8A95A5'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }, React.createElement(View, {\n        style: [styles.backgroundColor, styles.gray],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          _this2.setState({\n            backgroundColor: '#B9C6AE'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, React.createElement(View, {\n        style: [styles.backgroundColor, styles.green],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }))), React.createElement(Button, {\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('Chat', {\n            userName: _this2.state.userName,\n            backgroundColor: _this2.state.backgroundColor\n          });\n        },\n        title: \"Start Chatting\",\n        color: \"#757083\",\n        style: styles.startChatButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      })));\n    }\n  }]);\n\n  return Start;\n}(Component);\n\nexport { Start as default };\nvar styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    resizeMode: 'cover'\n  },\n  logIn: {\n    height: '44%',\n    width: '88%',\n    backgroundColor: 'white',\n    marginBottom: '6%',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  appTitle: {\n    fontSize: 45,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginTop: '6%'\n  },\n  userNameInput: {\n    width: '88%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    fontSize: 16,\n    color: '#757083',\n    fontWeight: '300',\n    opacity: 0.5\n  },\n  startChatButton: {\n    width: '88%',\n    height: 40,\n    fontSize: 16,\n    fontWeight: '600',\n    backgroundColor: '#757083'\n  },\n  choseBackgroundColor: {\n    width: '88%',\n    fontSize: 16,\n    fontWeight: '300',\n    color: '#757083'\n  },\n  backgroundColorWrapper: {\n    width: '88%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  backgroundColor: {\n    height: 40,\n    width: 40,\n    borderRadius: 40 / 2,\n    marginLeft: 15\n  },\n  black: {\n    backgroundColor: '#090C08'\n  },\n  purple: {\n    backgroundColor: '#474056'\n  },\n  gray: {\n    backgroundColor: '#8A95A5'\n  },\n  green: {\n    backgroundColor: '#B9C6AE'\n  }\n});","map":{"version":3,"sources":["/Users/christopherkoch/reactnatchat/components/Start.js"],"names":["React","Component","Start","state","userName","backgroundColor","require","styles","backgroundImage","appTitle","logIn","userNameInput","setState","choseBackgroundColor","backgroundColorWrapper","black","purple","gray","green","props","navigation","navigate","startChatButton","StyleSheet","create","flex","width","height","flexDirection","justifyContent","alignItems","resizeMode","marginBottom","fontSize","fontWeight","color","marginTop","borderColor","borderWidth","opacity","borderRadius","marginLeft"],"mappings":"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","sourcesContent":["/**\n* @description this is the startscreen, where the user can type his name\n* and choose a background-color for the chatscreen\n* @class Start\n* @requires React\n* @requires React-Native\n*/\n\n\n\nimport React, { Component } from 'react';\n//import relevant components from react native\nimport { StyleSheet, Text, View, TextInput, Button, Alert, ImageBackground, TouchableOpacity } from 'react-native';\n\n// create Screen1 (Start) class\nexport default class Start extends Component {\n\n  // define state\n  state = {\n    userName: '',\n    backgroundColor: '',\n  }\n\n  //render components\n  render() {\n    return (\n\n      <ImageBackground source={require('../assets/Background-Image.png')} style={styles.backgroundImage}>\n        {/*App title*/}\n        <Text style={styles.appTitle}>ChatApp</Text>\n        {/*login container*/}\n        <View style={styles.logIn}>\n          {/*textinput form*/}\n          <TextInput\n            style={styles.userNameInput}\n            onChangeText={(userName) => this.setState({ userName })}\n            value={this.state.userName}\n            placeholder='Your Name...'\n          />\n          {/*choose backgroundcolor*/}\n          <Text style={styles.choseBackgroundColor}>Choose Background Color:</Text>\n          {/*wrapper for the different available background colors*/}\n          <View style={styles.backgroundColorWrapper}>\n            {/*black*/}\n            <TouchableOpacity onPress={() => { this.setState({ backgroundColor: '#090C08' }) }}>\n              <View style={[styles.backgroundColor, styles.black]} >\n              </View>\n            </TouchableOpacity>\n            {/*purple*/}\n            <TouchableOpacity onPress={() => { this.setState({ backgroundColor: '#474056' }) }}>\n              <View style={[styles.backgroundColor, styles.purple]}>\n              </View>\n            </TouchableOpacity>\n            {/*gray*/}\n            <TouchableOpacity onPress={() => { this.setState({ backgroundColor: '#8A95A5' }) }}>\n              <View style={[styles.backgroundColor, styles.gray]}>\n              </View>\n            </TouchableOpacity>\n            {/*green*/}\n            <TouchableOpacity onPress={() => { this.setState({ backgroundColor: '#B9C6AE' }) }}>\n              <View style={[styles.backgroundColor, styles.green]}>\n              </View>\n            </TouchableOpacity>\n          </View>\n          {/*start chatting button --> directs you to conversation screen*/}\n          <Button\n            onPress={() => {\n              this.props.navigation.navigate('Chat', { userName: this.state.userName, backgroundColor: this.state.backgroundColor });\n            }}\n            title=\"Start Chatting\"\n            color='#757083'\n            style={styles.startChatButton}\n          />\n        </View>\n      </ImageBackground>\n    );\n  }\n}\n\n//stylesheets\nconst styles = StyleSheet.create({\n  backgroundImage: {\n    flex: 1,\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    resizeMode: 'cover'\n  },\n  logIn: {\n    height: '44%',\n    width: '88%',\n    backgroundColor: 'white',\n    marginBottom: '6%',\n    flexDirection: 'column',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  appTitle: {\n    fontSize: 45,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginTop: '6%'\n  },\n  userNameInput: {\n    width: '88%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    fontSize: 16,\n    color: '#757083',\n    fontWeight: '300',\n    opacity: 0.5\n  },\n  startChatButton: {\n    width: '88%',\n    height: 40,\n    fontSize: 16,\n    fontWeight: '600',\n    backgroundColor: '#757083'\n  },\n  choseBackgroundColor: {\n    width: '88%',\n    fontSize: 16,\n    fontWeight: '300',\n    color: '#757083'\n  },\n  backgroundColorWrapper: {\n    width: '88%',\n    flexDirection: 'row',\n    justifyContent: 'flex-start'\n  },\n  backgroundColor: {\n    height: 40,\n    width: 40,\n    borderRadius: 40 / 2,\n    marginLeft: 15\n  },\n  black: {\n    backgroundColor: '#090C08'\n  },\n  purple: {\n    backgroundColor: '#474056'\n  },\n  gray: {\n    backgroundColor: '#8A95A5'\n  },\n  green: {\n    backgroundColor: '#B9C6AE'\n  },\n});"]},"metadata":{},"sourceType":"module"}